// Message types for curp client
syntax = "proto3";

package commandpb;

import "error.proto";

message ProposeRequest {
    // The serialized command
    // The original type is `Command`
    bytes command = 1;
}

message ProposeResponse {
    optional uint64 leader_id = 1;
    uint64 term = 2;
    oneof exe_result {
        CmdResult result = 3;
        errorpb.ProposeError error = 4;
    }
}

message WaitSyncedRequest {
    string propose_id = 1;
}

message WaitSyncedResponse {
    message Success {
        // The serialized command after sync result
        // The original type is Command::ASR
        bytes after_sync_result = 1;
        // The serialized command execute result
        // The original type is Command::ER
        bytes exe_result = 2;
    }
    oneof sync_result {
        Success success = 1;
        errorpb.CommandSyncError error = 2;
    }
}

message CmdResult {
    oneof result {
        // The serialized command execute result
        // The original type is Command::ER
        bytes er = 1;
        // The serialized command error
        // The original type is Command::Error
        bytes error = 2;
    }
}
